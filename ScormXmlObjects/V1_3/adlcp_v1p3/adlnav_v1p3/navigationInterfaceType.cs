//
// navigationInterfaceType.cs.cs
//
// This file was generated by XMLSPY 2004 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSPY Documentation for further details.
// http://www.altova.com/xmlspy
//


using System;
using System.Collections;
using System.Xml;

namespace adlnav_v1p3
{
	public class navigationInterfaceType : Altova.Node
	{
		#region Forward constructors
		public navigationInterfaceType() : base() { SetCollectionParents(); }
		public navigationInterfaceType(XmlDocument doc) : base(doc) { SetCollectionParents(); }
		public navigationInterfaceType(XmlNode node) : base(node) { SetCollectionParents(); }
		public navigationInterfaceType(Altova.Node node) : base(node) { SetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{
			int nCount;

			nCount = DomChildCount(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI");
			for (int i = 0; i < nCount; i++)
			{
				XmlNode DOMNode = GetDomChildAt(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI", i);
				InternalAdjustPrefix(DOMNode, true);
			}
		}


		#region hideLMSUI accessor methods
		public int GethideLMSUIMinCount()
		{
			return 0;
		}

		public int hideLMSUIMinCount
		{
			get
			{
				return 0;
			}
		}

		public int GethideLMSUIMaxCount()
		{
			return Int32.MaxValue;
		}

		public int hideLMSUIMaxCount
		{
			get
			{
				return Int32.MaxValue;
			}
		}

		public int GethideLMSUICount()
		{
			return DomChildCount(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI");
		}

		public int hideLMSUICount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI");
			}
		}

		public bool HashideLMSUI()
		{
			return HasDomChild(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI");
		}

		public hideLMSUIType GethideLMSUIAt(int index)
		{
			return new hideLMSUIType(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI", index)));
		}

		public hideLMSUIType GethideLMSUI()
		{
			return GethideLMSUIAt(0);
		}

		public hideLMSUIType hideLMSUI
		{
			get
			{
				return GethideLMSUIAt(0);
			}
		}

		public void RemovehideLMSUIAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI", index);
		}

		public void RemovehideLMSUI()
		{
			while (HashideLMSUI())
				RemovehideLMSUIAt(0);
		}

		public void AddhideLMSUI(hideLMSUIType newValue)
		{
			AppendDomChild(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI", newValue.ToString());
		}

		public void InserthideLMSUIAt(hideLMSUIType newValue, int index)
		{
			InsertDomChildAt(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI", index, newValue.ToString());
		}

		public void ReplacehideLMSUIAt(hideLMSUIType newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.adlnet.org/xsd/adlnav_v1p3", "hideLMSUI", index, newValue.ToString());
		}
		#endregion // hideLMSUI accessor methods

		#region hideLMSUI collection
        public hideLMSUICollection	MyhideLMSUIs = new hideLMSUICollection( );

        public class hideLMSUICollection: IEnumerable
        {
            navigationInterfaceType parent;
            public navigationInterfaceType Parent
			{
				set
				{
					parent = value;
				}
			}
			public hideLMSUIEnumerator GetEnumerator() 
			{
				return new hideLMSUIEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class hideLMSUIEnumerator: IEnumerator 
        {
			int nIndex;
			navigationInterfaceType parent;
			public hideLMSUIEnumerator(navigationInterfaceType par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.hideLMSUICount );
			}
			public hideLMSUIType  Current 
			{
				get 
				{
					return(parent.GethideLMSUIAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}
	
        #endregion // hideLMSUI collection

        private void SetCollectionParents()
        {
            MyhideLMSUIs.Parent = this; 
	}
}
}
